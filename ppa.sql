-- 1) Crear la base de datos y seleccionarla
CREATE DATABASE IF NOT EXISTS economia_usa;
USE economia_usa;

-- 2) Definición de la tabla con los 5 quintiles y el top 5%
CREATE TABLE ingresos_quintiles (
  anio    YEAR       NOT NULL,
  q1      DECIMAL(12,2) NOT NULL,
  q2      DECIMAL(12,2) NOT NULL,
  q3      DECIMAL(12,2) NOT NULL,
  q4      DECIMAL(12,2) NOT NULL,
  q5      DECIMAL(12,2) NOT NULL,
  top5p   DECIMAL(12,2) NOT NULL,
  PRIMARY KEY (anio, q1)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- 3) Tabla inflacion_eeuu con DECIMAL(8,6) para permitir dos dígitos en la parte entera
CREATE TABLE inflacion_eeuu (
  anio YEAR NOT NULL,
  porcentaje_inflacion DECIMAL(8,6) NOT NULL,
  PRIMARY KEY (anio)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- 4) Insertar datos en quintil_bajo
INSERT INTO ingresos_quintiles (anio, q1,    q2,    q3,    q4,     q5,      top5p) VALUES
  (2021, 14859.00, 41025.00, 70879.00, 115462.00, 269356.00, 480236.00),
  (2020, 15350.00, 41599.00, 71421.00, 115403.00, 266326.00, 468469.00),
  (2019, 16199.00, 43082.00, 73058.00, 117752.00, 269655.00, 478081.00),
  (2018, 14863.00, 40237.00, 68592.00, 109590.00, 252364.00, 449409.00),
  (2017, 14725.00, 39239.00, 67808.00, 109442.00, 253127.00, 449175.00),
  (2017, 14654.00, 39128.00, 68044.00, 109454.00, 245198.00, 425846.00),
  (2016, 14613.00, 38957.00, 66781.00, 107459.00, 241546.00, 423486.00),
  (2015, 14246.00, 37316.00, 64992.00, 105246.00, 231425.00, 401253.00),
  (2014, 13376.00, 35612.00, 61908.00, 100619.00, 222301.00, 380724.00),
  (2013, 13507.00, 35895.00, 62606.00, 100738.00, 225248.00, 389639.00),
  (2013, 13573.00, 35541.00, 60953.00,  97296.00, 215758.00, 375518.00),
  (2012, 13584.00, 35107.00, 60505.00,  97058.00, 215052.00, 376008.00),
  (2011, 13568.00, 35257.00, 60173.00,  96678.00, 214917.00, 375995.00),
  (2010, 13691.00, 35531.00, 61229.00,  98227.00, 210946.00, 357656.00),
  (2009, 14624.00, 37035.00, 62703.00,  99616.00, 216265.00, 373921.00),
  (2008, 14704.00, 37234.00, 63239.00, 100614.00, 215781.00, 371764.00),
  (2007, 15131.00, 38566.00, 65454.00, 103628.00, 220028.00, 376196.00),
  (2006, 15291.00, 38765.00, 64959.00, 102820.00, 226535.00, 400623.00),
  (2005, 14818.00, 38046.00, 64392.00, 101280.00, 221936.00, 391011.00),
  (2004, 14729.00, 37688.00, 63855.00, 100686.00, 217743.00, 379440.00),
  (2003, 14761.00, 37918.00, 64365.00, 101883.00, 217188.00, 373953.00),
  (2002, 15087.00, 38359.00, 64640.00, 101678.00, 217084.00, 379080.00),
  (2001, 15548.00, 39068.00, 65394.00, 102532.00, 223922.00, 399559.00),
  (2000, 16025.00, 40011.00, 66631.00, 103581.00, 224458.00, 398210.00),
  (1999, 16173.00, 39713.00, 66473.00, 103457.00, 220624.00, 383466.00),
  (1998, 15365.00, 38797.00, 64918.00, 100401.00, 212460.00, 370317.00),
  (1997, 14925.00, 37313.00, 62774.00,  97229.00, 207290.00, 363771.00),
  (1996, 14827.00, 36393.00, 61214.00,  94742.00, 199265.00, 347111.00),
  (1995, 14779.00, 36123.00, 60400.00,  92850.00, 193764.00, 334409.00),
  (1994, 13990.00, 34865.00, 58735.00,  91398.00, 192146.00, 331975.00),
  (1993, 13625.00, 34542.00, 57901.00,  89981.00, 187471.00, 321763.00),
  (1992, 13774.00, 34511.00, 58143.00,  89255.00, 172944.00, 274494.00),
  (1991, 14058.00, 35309.00, 58649.00,  89405.00, 171442.00, 267549.00),
  (1990, 14448.00, 36351.00, 60043.00,  90528.00, 175682.00, 279755.00),
  (1989, 14796.00, 36813.00, 61194.00,  92563.00, 180944.00, 292342.00),
  (1988, 14274.00, 36030.00, 60261.00,  91093.00, 173906.00, 274276.00),
  (1987, 14029.00, 35655.00, 59610.00,  90103.00, 171352.00, 269966.00),
  (1986, 13665.00, 35149.00, 58819.00,  88611.00, 167720.00, 262744.00),
  (1985, 13518.00, 34258.00, 56864.00,  85535.00, 159777.00, 246465.00),
  (1984, 13539.00, 33722.00, 55884.00,  84145.00, 154720.00, 233557.00),
  (1983, 13109.00, 32930.00, 54443.00,  81698.00, 150000.00, 226633.00),
  (1982, 12956.00, 32789.00, 54275.00,  80720.00, 148047.00, 223702.00),
  (1981, 13201.00, 32883.00, 54475.00,  81202.00, 145051.00, 215545.00),
  (1980, 13530.00, 33676.00, 55569.00,  81867.00, 145965.00, 218130.00),
  (1979, 13985.00, 34784.00, 57348.00,  84156.00, 151031.00, 230339.00),
  (1978, 14084.00, 34588.00, 57110.00,  83658.00, 149361.00, 227344.00),
  (1977, 13620.00, 33523.00, 55457.00,  81255.00, 144896.00, 221665.00),
  (1976, 13687.00, 33506.00, 55101.00,  80019.00, 141619.00, 215783.00),
  (1975, 13358.00, 32810.00, 53832.00,  78219.00, 138101.00, 209574.00),
  (1974, 13827.00, 34367.00, 55390.00,  79993.00, 141729.00, 215427.00),
  (1973, 13878.00, 34893.00, 57234.00,  82333.00, 147317.00, 226914.00),
  (1972, 13260.00, 34251.00, 55896.00,  80246.00, 144065.00, 223293.00),
  (1971, 12515.00, 33077.00, 53626.00,  76240.00, 135090.00, 207204.00),
  (1970, 12437.00, 33693.00, 54256.00,  76477.00, 135393.00, 207813.00),
  (1969, 12657.00, 34174.00, 54608.00,  76488.00, 134442.00, 206935.00),
  (1968, 12358.00, 33141.00, 52560.00,  73320.00, 127404.00, 194786.00),
  (1967, 11378.00, 31526.00, 50337.00,  70428.00, 126743.00, 199925.00);

-- 5) Insertar datos en inflacion_eeuu
INSERT INTO inflacion_eeuu (anio, porcentaje_inflacion) VALUES
  (1960, 1.457976),
  (1961, 1.070724),
  (1962, 1.198773),
  (1963, 1.239669),
  (1964, 1.278912),
  (1965, 1.585169),
  (1966, 3.015075),
  (1967, 2.772786),
  (1968, 4.271796),
  (1969, 5.462386),
  (1970, 5.838255),
  (1971, 4.292767),
  (1972, 3.272278),
  (1973, 6.177760),
  (1974, 11.054805),
  (1975, 9.143147),
  (1976, 5.744813),
  (1977, 6.501684),
  (1978, 7.630964),
  (1979, 11.254471),
  (1980, 13.549202),
  (1981, 10.334563),
  (1982, 6.131427),
  (1983, 3.212435),
  (1984, 4.300535),
  (1985, 3.545644),
  (1986, 1.898048),
  (1987, 3.664563),
  (1988, 4.077741),
  (1989, 4.827003),
  (1990, 5.397956),
  (1991, 4.234964),
  (1992, 3.028820),
  (1993, 2.951657),
  (1994, 2.607442),
  (1995, 2.805420),
  (1996, 2.931204),
  (1997, 2.337690),
  (1998, 1.552279),
  (1999, 2.188027),
  (2000, 3.376857),
  (2001, 2.826171),
  (2002, 1.586032),
  (2003, 2.270095),
  (2004, 2.677237),
  (2005, 3.392747),
  (2006, 3.225944),
  (2007, 2.852672),
  (2008, 3.839100),
  (2009, -0.355546),
  (2010, 1.640043),
  (2011, 3.156842),
  (2012, 2.069337),
  (2013, 1.464833),
  (2014, 1.622223),
  (2015, 0.118627),
  (2016, 1.261583),
  (2017, 2.130110),
  (2018, 2.442583),
  (2019, 1.812210),
  (2020, 1.233584),
  (2021, 4.697859),
  (2022, 8.002800),
  (2023, 4.116338);





WITH
  -- 1) Cálculo del factor acumulado y % de inflación acumulada hasta cada año
  cum AS (
    SELECT
      anio,
      porcentaje_inflacion,
      EXP(
        SUM(LN(1 + porcentaje_inflacion/100))
        OVER (ORDER BY anio)
      ) AS factor_acumulado,
      ROUND(
        (EXP(
           SUM(LN(1 + porcentaje_inflacion/100))
           OVER (ORDER BY anio)
         ) - 1) * 100,
        2
      ) AS inflacion_acumulada_pct
    FROM inflacion_eeuu
  ),
  -- 2) Factor acumulado en 1967 (base para normalizar)
  base67 AS (
    SELECT factor_acumulado AS factor_1967
    FROM cum
    WHERE anio = 1967
  )
SELECT
  iq.anio,
  c.porcentaje_inflacion       AS inflacion_anual_pct,
  c.inflacion_acumulada_pct    AS inflacion_acumulada_pct,
  iq.q1                         AS valor_nominal,
  -- Valor ajustado a poder adquisitivo de 1967
  ROUND(
    iq.q1
    / (c.factor_acumulado / b.factor_1967)
  , 2)                           AS valor_en_1967,
  -- Cuántas veces han subido los precios respecto a 1967
  ROUND(
    c.factor_acumulado
    / b.factor_1967
  , 4)                           AS factor_inflacion_relativa,
  -- % de poder adquisitivo perdido desde 1967
  ROUND(
    (1
     - b.factor_1967 / c.factor_acumulado
    ) * 100
  , 2)                           AS perdida_poder_adquisitivo_pct
FROM ingresos_quintiles AS iq
  JOIN cum       AS c  ON c.anio = iq.anio
  CROSS JOIN base67  AS b
WHERE iq.anio >= 1967
ORDER BY iq.anio;






WITH
  -- 1) Cálculo del factor acumulado y % de inflación acumulada hasta cada año
  cum AS (
    SELECT
      anio,
      porcentaje_inflacion,
      EXP(
        SUM(LN(1 + porcentaje_inflacion/100))
        OVER (ORDER BY anio)
      ) AS factor_acumulado
    FROM inflacion_eeuu
  ),
  -- 2) Factor acumulado en 1967 (base para normalizar)
  base67 AS (
    SELECT factor_acumulado AS factor_1967
    FROM cum
    WHERE anio = 1967
  )
SELECT
  iq.anio,
  
  -- Quintil 1: valor nominal, valor real (1967) y % pérdida
  iq.q1 AS quintil_bajo, ROUND(iq.q1 / (c.factor_acumulado / b.factor_1967), 2) AS valor_q1_en_1967,
  ROUND((1 - b.factor_1967 / c.factor_acumulado) * 100, 2) AS perdida_q1_pct,
  
  -- Quintil 2
  iq.q2 AS quintil_2, ROUND(iq.q2 / (c.factor_acumulado / b.factor_1967), 2) AS valor_q2_en_1967,
  ROUND((1 - b.factor_1967 / c.factor_acumulado) * 100, 2) AS perdida_q2_pct,

  -- Quintil 3
  iq.q3 AS quintil_3, ROUND(iq.q3 / (c.factor_acumulado / b.factor_1967), 2) AS valor_q3_en_1967,
  ROUND((1 - b.factor_1967 / c.factor_acumulado) * 100, 2) AS perdida_q3_pct,

  -- Quintil 4
  iq.q4 AS quintil_4, ROUND(iq.q4 / (c.factor_acumulado / b.factor_1967), 2) AS valor_q4_en_1967,
  ROUND((1 - b.factor_1967 / c.factor_acumulado) * 100, 2) AS perdida_q4_pct,

  -- Quintil 5
  iq.q5 AS quintil_5,
  ROUND(iq.q5 / (c.factor_acumulado / b.factor_1967), 2) AS valor_q5_en_1967, 
  ROUND((1 - b.factor_1967 / c.factor_acumulado) * 100, 2) AS perdida_q5_pct

FROM ingresos_quintiles AS iq
JOIN cum                 AS c  ON c.anio = iq.anio
CROSS JOIN base67        AS b
ORDER BY iq.anio;

